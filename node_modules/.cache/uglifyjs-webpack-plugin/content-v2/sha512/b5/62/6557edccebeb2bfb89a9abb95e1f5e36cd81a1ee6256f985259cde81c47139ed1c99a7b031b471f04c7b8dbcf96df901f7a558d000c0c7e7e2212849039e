{"map":"{\"version\":3,\"sources\":[\"/home/dulgeoion/projects/vitamin/src/components/subtasks/Hanoi.js\"],\"names\":[\"str\",\"action\",\"puzzleArray\",\"stackB\",\"stackG\",\"stackW\",\"split\",\"map\",\"item\",\"elem\",\"push\",\"sort\",\"order\",\"length\",\"result\",\"changeAllToWhite\",\"src\",\"dest\",\"temp\",\"pop\",\"console\",\"log\"],\"mappings\":\"+GAAA,SAAeA,EAAKC,GAmDhB,IAAIC,KACAC,KACAC,KACAC,MAEJH,EAAcF,EAAIM,MAAM,KAAKC,IAAI,SAAAC,GAAA,OAAQA,EAAKF,MAAM,OACxCC,IAAK,SAAEE,GACjB,OAAQA,EAAK,IACX,IAAK,IACHN,EAAOO,KAAKD,EAAK,IACjB,MAEF,IAAK,IACHL,EAAOM,KAAKD,EAAK,IACjB,MAEF,IAAK,IACHJ,EAAOK,KAAKD,EAAK,OAKvBN,EAAOQ,OACPP,EAAOO,OACPN,EAAOM,OAEP,IAAIC,KACAT,EAAOU,OAAOT,EAAOS,OACvBD,EAAMF,KAAK,IAAK,KAEhBE,EAAMF,KAAK,IAAI,KAIjB,IAAII,KAMJ,MAJe,wBAAXb,GArFJ,SAASc,EAAiBF,EAAQG,EAAKC,EAAMC,GACzC,GAAY,GAARL,EAAJ,CAKA,OADAE,EAAiBF,EAAO,EAAGG,EAAKE,EAAMD,GAC9BD,EAAM,IAAKC,GACf,IAAK,MACDb,EAAOM,KAAKP,EAAOgB,OACnBL,EAAOJ,MAAMN,EAAOA,EAAOS,OAAO,GAAIG,EAAKC,IAC3CG,QAAQC,IAAIjB,EAAOA,EAAOS,OAAO,GAAG,IAAIG,EAAI,OAAOC,GACnD,MAEA,IAAK,MACLZ,EAAOK,KAAKP,EAAOgB,OACnBL,EAAOJ,MAAML,EAAOA,EAAOQ,OAAO,GAAIG,EAAKC,IAC3CG,QAAQC,IAAIhB,EAAOA,EAAOQ,OAAO,GAAG,IAAIG,EAAI,OAAOC,GACnD,MAEA,IAAK,MACLd,EAAOO,KAAKN,EAAOe,OACnBL,EAAOJ,MAAMP,EAAOA,EAAOU,OAAO,GAAIG,EAAKC,IAC3CG,QAAQC,IAAIlB,EAAOA,EAAOU,OAAO,GAAG,IAAIG,EAAI,OAAOC,GACnD,MAGA,IAAK,MACLZ,EAAOK,KAAKN,EAAOe,OACnBL,EAAOJ,MAAML,EAAOA,EAAOQ,OAAO,GAAIG,EAAKC,IAC3CG,QAAQC,IAAIhB,EAAOA,EAAOQ,OAAO,GAAG,IAAIG,EAAI,OAAOC,GACnD,MAEA,IAAK,MACLb,EAAOM,KAAKL,EAAOc,OACnBL,EAAOJ,MAAMN,EAAOA,EAAOS,OAAO,GAAIG,EAAKC,IAC3CG,QAAQC,IAAIjB,EAAOA,EAAOS,OAAO,GAAG,IAAIG,EAAI,OAAOC,GACnD,MAEA,IAAK,MACLd,EAAOO,KAAKL,EAAOc,OACnBL,EAAOJ,MAAMP,EAAOA,EAAOU,OAAO,GAAIG,EAAKC,IAC3CG,QAAQC,IAAIlB,EAAOA,EAAOU,OAAO,GAAG,IAAIG,EAAI,OAAOC,GAK3DF,EAAiBF,EAAO,EAAGK,EAAKD,EAAKD,IAwCvCD,CAAiBb,EAAYW,OAAQD,EAAM,GAAI,IAAKA,EAAM,IAGrDE\",\"sourcesContent\":[\"function hanoi(str, action){\\n\\n    function changeAllToWhite(length, src, dest, temp){\\n        if (length==0){\\n            return;\\n        }\\n\\n        changeAllToWhite(length-1, src, temp, dest);\\n        switch (src + \\\"|\\\" +dest) {\\n            case \\\"B|G\\\":\\n                stackG.push(stackB.pop());\\n                result.push([stackG[stackG.length-1], src, dest]);\\n                console.log(stackG[stackG.length-1]+\\\" \\\"+src+\\\" -> \\\"+dest);\\n                break;\\n\\n                case \\\"B|W\\\":\\n                stackW.push(stackB.pop());\\n                result.push([stackW[stackW.length-1], src, dest]);\\n                console.log(stackW[stackW.length-1]+\\\" \\\"+src+\\\" -> \\\"+dest);\\n                break;\\n\\n                case \\\"G|B\\\":\\n                stackB.push(stackG.pop());\\n                result.push([stackB[stackB.length-1], src, dest]);\\n                console.log(stackB[stackB.length-1]+\\\" \\\"+src+\\\" -> \\\"+dest);\\n                break;\\n\\n\\n                case \\\"G|W\\\":\\n                stackW.push(stackG.pop());\\n                result.push([stackW[stackW.length-1], src, dest]);\\n                console.log(stackW[stackW.length-1]+\\\" \\\"+src+\\\" -> \\\"+dest);\\n                break;\\n\\n                case \\\"W|G\\\":\\n                stackG.push(stackW.pop());\\n                result.push([stackG[stackG.length-1], src, dest]);\\n                console.log(stackG[stackG.length-1]+\\\" \\\"+src+\\\" -> \\\"+dest);\\n                break;\\n\\n                case \\\"W|B\\\":\\n                stackB.push(stackW.pop());\\n                result.push([stackB[stackB.length-1], src, dest]);\\n                console.log(stackB[stackB.length-1]+\\\" \\\"+src+\\\" -> \\\"+dest);\\n                break;\\n\\n\\n        }\\n        changeAllToWhite(length-1, temp,dest,src);\\n    }\\n\\n    let puzzleArray = [];\\n    var stackB = [];\\n    var stackG = [];\\n    var stackW = [];\\n\\n    puzzleArray = str.split(' ').map(item => item.split(''))  ;\\n    puzzleArray.map( ( elem  )=>{\\n      switch (elem[1]) {\\n        case 'B':\\n          stackB.push(elem[0]);\\n          break;\\n\\n        case 'G':\\n          stackG.push(elem[0]);\\n          break;\\n\\n        case 'W':\\n          stackW.push(elem[0]);\\n          break;\\n      }\\n    });\\n\\n    stackB.sort();\\n    stackG.sort();\\n    stackW.sort();\\n\\n    let order = [];\\n    if (stackB.length>stackG.length){\\n      order.push('B', 'G');\\n    }else{\\n      order.push('G','B');\\n    }\\n\\n\\n    let result = [];\\n\\n    if (action === \\\"CHANGE_ALL_TO_WHITE\\\"){\\n      changeAllToWhite(puzzleArray.length, order[0], 'W', order[1]  );\\n    }\\n\\n    return result;\\n\\n}\\n\\n\\n\\nexport default hanoi;\\n\"]}","code":"webpackHotUpdate(0,{10:function(e,s,p){\"use strict\";Object.defineProperty(s,\"__esModule\",{value:!0}),s.default=function(e,s){var p=[],t=[],o=[],h=[];(p=e.split(\" \").map(function(e){return e.split(\"\")})).map(function(e){switch(e[1]){case\"B\":t.push(e[0]);break;case\"G\":o.push(e[0]);break;case\"W\":h.push(e[0])}}),t.sort(),o.sort(),h.sort();var n=[];t.length>o.length?n.push(\"B\",\"G\"):n.push(\"G\",\"B\");var l=[];return\"CHANGE_ALL_TO_WHITE\"===s&&function e(s,p,n,u){if(0!=s){switch(e(s-1,p,u,n),p+\"|\"+n){case\"B|G\":o.push(t.pop()),l.push([o[o.length-1],p,n]),console.log(o[o.length-1]+\" \"+p+\" -> \"+n);break;case\"B|W\":h.push(t.pop()),l.push([h[h.length-1],p,n]),console.log(h[h.length-1]+\" \"+p+\" -> \"+n);break;case\"G|B\":t.push(o.pop()),l.push([t[t.length-1],p,n]),console.log(t[t.length-1]+\" \"+p+\" -> \"+n);break;case\"G|W\":h.push(o.pop()),l.push([h[h.length-1],p,n]),console.log(h[h.length-1]+\" \"+p+\" -> \"+n);break;case\"W|G\":o.push(h.pop()),l.push([o[o.length-1],p,n]),console.log(o[o.length-1]+\" \"+p+\" -> \"+n);break;case\"W|B\":t.push(h.pop()),l.push([t[t.length-1],p,n]),console.log(t[t.length-1]+\" \"+p+\" -> \"+n)}e(s-1,u,n,p)}}(p.length,n[0],\"W\",n[1]),l}}});","extractedComments":[]}