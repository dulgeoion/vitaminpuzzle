{"map":"{\"version\":3,\"sources\":[\"/home/dulgeoion/projects/vitamin/src/components/subtasks/Task2A.js\"],\"names\":[\"__webpack_require__\",\"Task2A\",\"props\",\"_classCallCheck\",\"this\",\"_this\",\"_possibleConstructorReturn\",\"__proto__\",\"Object\",\"getPrototypeOf\",\"call\",\"state\",\"inputValue\",\"showCanvas\",\"action\",\"updateCanvas\",\"exportData\",\"handleInput\",\"bind\",\"_react2\",\"default\",\"Component\",\"event\",\"setState\",\"target\",\"value\",\"canvas\",\"createElement\",\"_Canvas2\",\"width\",\"query\",\"error\",\"differenceError\",\"className\",\"type\",\"onChange\",\"onClick\"],\"mappings\":\"kWAAAA,EAAA,QACAA,EAAA,2DAGMC,cAEJ,SAAAA,EAAYC,gGAAMC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KACVF,IADU,OAEhBG,EAAKM,OACHC,WAAY,GACZC,YAAY,EACZC,OAAQ,WACRC,cAAc,EACdC,WAAY,IAEdX,EAAKY,YAAcZ,EAAKY,YAAYC,KAAjBb,GACnBA,EAAKQ,WAAaR,EAAKQ,WAAWK,KAAhBb,GAVFA,qUAFCc,EAAAC,QAAMC,kDAebC,GACVlB,KAAKmB,UACHR,cAAc,EACdH,WAAYU,EAAME,OAAOC,6CAKtBrB,KAAKO,MAAME,WAQdT,KAAKmB,UACHR,cAAc,EACdD,OAAQ,eACRE,WAAYZ,KAAKO,MAAMC,aAVzBR,KAAKmB,UACHV,YAAY,EACZE,cAAc,EACdC,WAAYZ,KAAKO,MAAMC,WACvBE,OAAQ,8CAaZ,IAAIY,EAEFA,EADEtB,KAAKO,MAAME,WACJM,EAAAC,QAAAO,cAAAC,EAAAR,SAAQN,OAAQV,KAAKO,MAAMG,OAAQC,aAAcX,KAAKO,MAAMI,aAAcc,MAAM,MAAMC,MAAO1B,KAAKO,MAAMK,aAExG,GAGX,IAAIe,EAAQ,GAOd,OALMA,EADA3B,KAAKO,MAAMqB,gBACHb,EAAAC,QAAAO,cAAA,KAAGM,UAAU,SAAQd,EAAAC,QAAAO,cAAA,SAAA,KAAA,UAArB,2CAEF,GAIVR,EAAAC,QAAAO,cAAA,OAAKM,UAAU,UACfd,EAAAC,QAAAO,cAAA,KAAA,KAAA,aACAR,EAAAC,QAAAO,cAAA,KAAA,KAAA,mHACER,EAAAC,QAAAO,cAAA,SAAOO,KAAK,OAAOT,MAAOrB,KAAKO,MAAMC,WAAYuB,SAAU/B,KAAKa,cAChEE,EAAAC,QAAAO,cAAA,UAAQS,QAAShC,KAAKS,YAAtB,YACCM,EAAAC,QAAAO,cAAA,KAAA,MACCI,EACDZ,EAAAC,QAAAO,cAAA,KAAA,MACCD,sBASOzB\",\"sourcesContent\":[\"import React from 'react';\\nimport Canvas from '../Canvas';\\n\\n\\nclass Task2A extends React.Component {\\n\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      inputValue: '',\\n      showCanvas: false,\\n      action: 'SHOW_ROW',\\n      updateCanvas: false,\\n      exportData: ''\\n    }\\n    this.handleInput = this.handleInput.bind(this);\\n    this.showCanvas = this.showCanvas.bind(this);\\n  }\\n\\n  handleInput(event){\\n    this.setState({\\n      updateCanvas: false,\\n      inputValue: event.target.value\\n    });\\n  }\\n\\n  showCanvas(){\\n    if (!this.state.showCanvas){\\n      this.setState({\\n        showCanvas: true,\\n        updateCanvas: false,\\n        exportData: this.state.inputValue,\\n        action: 'SHOW_ROW'\\n      });\\n    }else{\\n      this.setState({\\n        updateCanvas: true,\\n        action: 'RERENDER_ROW',\\n        exportData: this.state.inputValue\\n      });\\n    }\\n  }\\n\\n\\n  render() {\\n    var canvas;\\n    if (this.state.showCanvas){\\n      canvas = <Canvas action={this.state.action} updateCanvas={this.state.updateCanvas} width='600' query={this.state.exportData} />\\n    }else{\\n      canvas = '';\\n    }\\n\\n    var error = '';\\n    if (this.state.differenceError){\\n        error = <p className='error'><strong>Error!</strong> Subtraction difference is more than 1!</p>\\n    } else {\\n      error = '';\\n    }\\n\\n  return(\\n    <div className=\\\"task1a\\\">\\n    <h3>Task2 A-B</h3>\\n    <h4>In this tasks I created row generation visualisation and added animation of transisting from one state to other</h4>\\n      <input type='text' value={this.state.inputValue} onChange={this.handleInput} />\\n      <button onClick={this.showCanvas}>Show row</button>\\n       <br />\\n       {error}\\n       <br />\\n       {canvas}\\n    </div>\\n\\n    );\\n  }\\n}\\n\\n\\n\\nexport default Task2A;\\n\"]}","code":"webpackHotUpdate(0,{19:function(t,e,a){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=function(){function t(t,e){for(var a=0;a<e.length;a++){var n=e[a];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,a,n){return a&&t(e.prototype,a),n&&t(e,n),e}}(),r=u(a(0)),o=u(a(4));function u(t){return t&&t.__esModule?t:{default:t}}var s=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var a=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return a.state={inputValue:\"\",showCanvas:!1,action:\"SHOW_ROW\",updateCanvas:!1,exportData:\"\"},a.handleInput=a.handleInput.bind(a),a.showCanvas=a.showCanvas.bind(a),a}return function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.default.Component),n(e,[{key:\"handleInput\",value:function(t){this.setState({updateCanvas:!1,inputValue:t.target.value})}},{key:\"showCanvas\",value:function(){this.state.showCanvas?this.setState({updateCanvas:!0,action:\"RERENDER_ROW\",exportData:this.state.inputValue}):this.setState({showCanvas:!0,updateCanvas:!1,exportData:this.state.inputValue,action:\"SHOW_ROW\"})}},{key:\"render\",value:function(){var t;t=this.state.showCanvas?r.default.createElement(o.default,{action:this.state.action,updateCanvas:this.state.updateCanvas,width:\"600\",query:this.state.exportData}):\"\";var e=\"\";return e=this.state.differenceError?r.default.createElement(\"p\",{className:\"error\"},r.default.createElement(\"strong\",null,\"Error!\"),\" Subtraction difference is more than 1!\"):\"\",r.default.createElement(\"div\",{className:\"task1a\"},r.default.createElement(\"h3\",null,\"Task2 A-B\"),r.default.createElement(\"h4\",null,\"In this tasks I created row generation visualisation and added animation of transisting from one state to other\"),r.default.createElement(\"input\",{type:\"text\",value:this.state.inputValue,onChange:this.handleInput}),r.default.createElement(\"button\",{onClick:this.showCanvas},\"Show row\"),r.default.createElement(\"br\",null),e,r.default.createElement(\"br\",null),t)}}]),e}();e.default=s}});","extractedComments":[]}